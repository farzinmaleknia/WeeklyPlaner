@page "/"

@using WeeklyPlaner.Models

<div class="container-fluid">
	<div class="row">
		@foreach (var week in WeeksListIterable)
		{
			foreach (var day in week.GetDays())
			 {
				<div class="col-12  padding-x-0">
					<div class="card days">
						<span class="card-img-top my-bg-green text-center f-size36 days-title">@(day.Title)</span>
						<div class="card-body padding-x-0">
							<div class="list-group list-group-flush" >
								<div class="list-group-item padding-x-0">
									@foreach (var meal in day.GetMeals())
									{
										<div class="card">
											<button class="card-img-top bg-light text-center f-size28 rounded border-0" data-bs-toggle="collapse" href="#dinnerBody" aria-expanded="true" aria-controls="dinnerBody">@(meal.Title)</button>
											<div id="dinnerBody" class="collapse show">
												<div class="card-body bg-light">
													<div class="row mx-auto">
														<div class="col-6 padding-x-0">
															<button class="btn btn-sm my-bg-red m-auto width-98 meal-buttons food-name">@(meal.FoodName)</button>
														</div> 
														<div class="col-6 padding-x-0">
															<button class="btn btn-sm my-bg-skyblue text-white m-auto width-98 meal-buttons">اقلام خرید</button>
														</div> 
														<div class="col-12 f-size18 pt-3">
															<div class="d-flex justify-content-between">
																<div>
																	- لپ
																</div>
																<div>
																	یک بسته
																</div>
															</div>
															<div class="d-flex justify-content-between">
																<div>
																	- رب گوجه
																</div>
																<div>
																	یک شیشه
																</div>
															</div>
														</div>
													</div>
												</div>
											</div>
										</div>										
									}
								</div>
							</div>
						</div>
					</div>
				</div>
			}
			
		}





@* 		<div class="col-12  padding-x-0">
			<div class="card days">
				<span class="card-img-top my-bg-green text-center f-size36 days-title">شنبه</span>
				<div class="card-body padding-x-0">
					<div class="list-group list-group-flush" >
						<div class="list-group-item padding-x-0">
							<div class="card">
								<button class="card-img-top bg-light text-center f-size28 rounded border-0" data-bs-toggle="collapse" href="#dinnerBody" aria-expanded="true" aria-controls="dinnerBody">شام</button>
								<div id="dinnerBody" class="collapse show">
									<div class="card-body bg-light">
										<div class="row mx-auto">
											<div class="col-6 padding-x-0">
                                                <button class="btn btn-sm my-bg-red m-auto width-98 meal-buttons food-name">قیمه</button>
											</div> 
											<div class="col-6 padding-x-0">
                                                <button class="btn btn-sm my-bg-skyblue text-white m-auto width-98 meal-buttons">اقلام خرید</button>
											</div> 
											<div class="col-12 f-size18 pt-3">
												<div class="d-flex justify-content-between">
													<div>
														- لپ
													</div>
													<div>
														یک بسته
													</div>
												</div>
												<div class="d-flex justify-content-between">
													<div>
														- رب گوجه
													</div>
													<div>
														یک شیشه
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div> *@
	</div>
</div>




@code{
	public Week FirstWeek { get; set; } = new Week();

	public List<Week> WeeksList { get; set; } = new List<Week>();
	public IEnumerable<Week> WeeksListIterable { get; set; } = new List<Week>();


	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		FirstWeek = new Week()
		{
			Thursday = new Day()
			{
				Title = "Thursday",
				Lunch = new Meal()
				{
					Title = "Lunch",
					FoodName = "Abgousht",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "SibZamini",
							Amount = "1K"
						}
					}
				},
				Dinner = new Meal()
				{
					Title = "Dinner",
					FoodName = "Ghorme",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "piaz",
							Amount = "1K"
						}
					}
				}
			},
			Friday = new Day()
			{
				Title = "Friday",
				Lunch = new Meal()
				{
					Title = "Lunch",
					FoodName = "Tahchin",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "Morgh",
							Amount = "0.5K"
						}
					}
				},
				Dinner = new Meal()
				{
					Title = "Dinner",
					FoodName = "Soup Vermichel",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "Gharch",
							Amount = "0.5K"
						}
					}
				}
			},
			Saturday = new Day()
			{
				Title = "Saturday",
				Dinner = new Meal()
				{
					Title = "Dinner",
					FoodName = "kabab shami",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "SibZamini",
							Amount = "0.5K"
						}
					}
				}
			},
			Sunday = new Day()
			{
				Title = "Sunday",
			},
			Monday = new Day()
			{
				Title = "Monday",
				Dinner = new Meal()
				{
					Title = "Dinner",
					FoodName = "Makaroni",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "Rob Goje",
							Amount = "1 Shishe"
						}
					}
				}
			},
			Tuesday = new Day()
			{
				Title = "Tuesday",
			},
			Wednesday = new Day()
			{
				Title = "Wednesday",
				Dinner = new Meal()
				{
					Title = "Dinner",
					FoodName = "Olvie",
					Groceries = new List<Grocery>()
					{
						new Grocery()
						{
							Name = "Mayoneese",
							Amount = "1 Shishe"
						}
					}
				}
			},
		};

		WeeksList.Add(FirstWeek);
		WeeksListIterable = WeeksList;
	}

}
